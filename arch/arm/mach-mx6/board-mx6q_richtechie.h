/*
 * Copyright (C) 2012 Freescale Semiconductor, Inc. All Rights Reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.

 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

#ifndef _BOARD_MX6Q_RICHTECHIE_H
#define _BOARD_MX6Q_RICHTECHIE_H
#include <mach/iomux-mx6q.h>

static iomux_v3_cfg_t mx6q_richtechie_pads1[] = {
	MX6Q_PAD_KEY_COL4__GPIO_4_14, //18825e00 50000004 = 0x005e8218, 0x04000050
	//=IOMUX_PAD(0x05E8, 0x0218, 5, 0x0000, 0, 0) | MUX_PAD_CTRL(NO_PAD_CTRL)
	MX6Q_PAD_KEY_ROW4__GPIO_4_15, //1cc25e00 50000004 = 0x005ec21c, 0x04000050
	//=IOMUX_PAD(0x05EC, 0x021C, 5, 0x0000, 0, 0) | MUX_PAD_CTRL(NO_PAD_CTRL),
};

static iomux_v3_cfg_t mx6q_richtechie_pads2[] = {
MX6Q_PAD_SD2_DAT0__AUDMUX_AUD4_RXD, //IOMUX_PAD(0x0368, 0x0054, 3, 0x07b4, 0, 0) | MUX_PAD_CTRL(NO_PAD_CTRL), //0x040000 3 7b4 368 054,
MX6Q_PAD_SD2_DAT3__AUDMUX_AUD4_TXC, //IOMUX_PAD(0x0744, 0x035c, 3, 0x07c4, 1, 0) | MUX_PAD_CTRL(NO_PAD_CTRL), //0x0c0000 3 7c4 744 35c,
MX6Q_PAD_SD2_DAT2__AUDMUX_AUD4_TXD, //IOMUX_PAD(0x0364, 0x0050, 3, 0x07b8, 0, 0) | MUX_PAD_CTRL(NO_PAD_CTRL), //0x040000 3 7b8 364 050,
MX6Q_PAD_SD2_DAT1__AUDMUX_AUD4_TXFS, //IOMUX_PAD(0x0360, 0x004c, 3, 0x07c8, 0, 0) | MUX_PAD_CTRL(NO_PAD_CTRL), //0x040000 3 7c8 360 04c,
0x03616240005c81f8,
0x0b616249385cc1fc,
0x03616240005d0200,
0x0b616249405d4204,
0x0b6162493c5ec21c,
0x026172493c5e8218,
0x02e0b200005f0220,
0x04000040005fc22c,
MX6Q_PAD_SD3_CLK__USDHC3_CLK_50MHZ, //IOMUX_PAD(0x06a4, 0x02bc, 0, 0x0000, 0, 0x17059) /*| MUX_PAD_CTRL(NO_PAD_CTRL)*/, //0x02e0b2 0 000 6a4 2bc,
MX6Q_PAD_SD3_CMD__USDHC3_CMD_50MHZ, //IOMUX_PAD(0x06a0, 0x02b8, 0, 0x0000, 0, 0x17059) /*| MUX_PAD_CTRL(NO_PAD_CTRL)*/, //0x02e0b3 0 000 6a0 2b8,
MX6Q_PAD_SD3_DAT0__USDHC3_DAT0_50MHZ, //IOMUX_PAD(0x06a8, 0x02c0, 0, 0x0000, 0, 0x17059) /*| MUX_PAD_CTRL(NO_PAD_CTRL)*/, //0x02e0b2 0 000 6a8 2c0,
MX6Q_PAD_SD3_DAT1__USDHC3_DAT1_50MHZ, //IOMUX_PAD(0x06ac, 0x02c4, 0, 0x0000, 0, 0x17059) /*| MUX_PAD_CTRL(NO_PAD_CTRL)*/, //0x02e0b2 0 000 6ac 2c4,
MX6Q_PAD_SD3_DAT2__USDHC3_DAT2_50MHZ, //IOMUX_PAD(0x06b0, 0x02c8, 0, 0x0000, 0, 0x17059) /*| MUX_PAD_CTRL(NO_PAD_CTRL)*/, //0x02e0b2 0 000 6b0 2c8,
MX6Q_PAD_SD3_DAT3__USDHC3_DAT3_50MHZ, //IOMUX_PAD(0x06b4, 0x02cc, 0, 0x0000, 0, 0x17059) /*| MUX_PAD_CTRL(NO_PAD_CTRL)*/, //0x02e0b2 0 000 6b4 2cc,
0x0400005000600230,
0x0400005000614244,
0x040000500073c354,
0x0400005000740358,
0x0000205000728340,
0x000020500072433c,
0x0400005000730348,
0x040000500073434c,
0x0400005000738350,
0x040000500072c344,
0x04000050006e42fc,
0x04000050006e8300,
0x04000050006ec304,
0x04000050006f0308,
0x04000050006f430c,
0x04000050006f8310,
0x04000050006fc314,
0x0400005000700318,
0x040000500040c0f8, 0x04000050004100fc,
0x040000500043011c, 0x0400005000434120,
0x04000050003a4090, 0x04000050003a8094,
0x04000050003ac098, 0x02016250003b009c,
0x04000050003b40a0, 0x04000050003bc0a8,
0x00002050003c80b4, 0x04000050003cc0b8,
0x04000050003dc0c8, 0x04000050003e00cc,
0x04000050003e40d0, 0x0400005000624254,
0x04000050005d8208, 0x04000050006bc2d4,
0x05800050006c42dc, 0x05800050006c82e0,
0x02e0b250006cc2e4, 0x02e0b250006d02e8,
0x04000050006d42ec, 0x040000500061c24c,
MX6Q_PAD_SD4_CLK__USDHC4_CLK_50MHZ, //IOMUX_PAD(0x06e0, 0x02f8, 0, 0x0000, 0, 0x17059) /*| MUX_PAD_CTRL(NO_PAD_CTRL)*/, //0x02e0b2 0 000 6e0 2f8,
MX6Q_PAD_SD4_CMD__USDHC4_CMD_50MHZ, //IOMUX_PAD(0x06dc, 0x02f4, 0, 0x0000, 0, 0x17059) /*| MUX_PAD_CTRL(NO_PAD_CTRL)*/, //0x02e0b3 0 000 6dc 2f4,
MX6Q_PAD_SD4_DAT0__USDHC4_DAT0_50MHZ, //IOMUX_PAD(0x0704, 0x031c, 1, 0x0000, 0, 0x17059) /*| MUX_PAD_CTRL(NO_PAD_CTRL)*/, //0x02e0b2 1 000 704 31c,
MX6Q_PAD_SD4_DAT1__USDHC4_DAT1_50MHZ, //IOMUX_PAD(0x0708, 0x0320, 1, 0x0000, 0, 0x17059) /*| MUX_PAD_CTRL(NO_PAD_CTRL)*/, //0x02e0b2 1 000 708 320,
MX6Q_PAD_SD4_DAT2__USDHC4_DAT2_50MHZ, //IOMUX_PAD(0x070c, 0x0324, 1, 0x0000, 0, 0x17059) /*| MUX_PAD_CTRL(NO_PAD_CTRL)*/, //0x02e0b2 1 000 70c 324,
MX6Q_PAD_SD4_DAT3__USDHC4_DAT3_50MHZ, //IOMUX_PAD(0x0710, 0x0328, 1, 0x0000, 0, 0x17059) /*| MUX_PAD_CTRL(NO_PAD_CTRL)*/, //0x02e0b2 1 000 710 328,
MX6Q_PAD_SD4_DAT4__USDHC4_DAT4_50MHZ, //IOMUX_PAD(0x0714, 0x032c, 1, 0x0000, 0, 0x17059) /*| MUX_PAD_CTRL(NO_PAD_CTRL)*/, //0x02e0b2 1 000 714 32c,
MX6Q_PAD_SD4_DAT5__USDHC4_DAT5_50MHZ, //IOMUX_PAD(0x0718, 0x0330, 1, 0x0000, 0, 0x17059) /*| MUX_PAD_CTRL(NO_PAD_CTRL)*/, //0x02e0b2 1 000 718 330,
MX6Q_PAD_SD4_DAT6__USDHC4_DAT6_50MHZ, //IOMUX_PAD(0x071c, 0x0334, 1, 0x0000, 0, 0x17059) /*| MUX_PAD_CTRL(NO_PAD_CTRL)*/, //0x02e0b2 1 000 71c 334,
MX6Q_PAD_SD4_DAT7__USDHC4_DAT7_50MHZ, //IOMUX_PAD(0x0720, 0x0338, 1, 0x0000, 0, 0x17059) /*| MUX_PAD_CTRL(NO_PAD_CTRL)*/, //0x02e0b2 1 000 720 338,
0x02e0b210006c02d8,
0x03606028684f81e4,
0x03606028704f01dc,
0x03606028604f41e0,
0x03606028804fc1e8, 0x036060287c5001ec,
0x03606028845041f0, 0x03606028885081f4,
0x0b606028746d42ec, 0x0b606028786d82f0,
0x03f163189c3d80c4, 0x03f16368983b80a4,
0x0bf16348a05e0210, 0x0bf16348a45e4214,
0x13f16368a860c23c, 0x13f16368ac618248,
0x0400005000638268, 0x000020500063c26c,
0x0000205000644274, 0x0400000000658288,
0x040000000065c28c, 0x0400000000660290,
0x0400000000664294, 0x0400000000668298,
0x040000000066c29c, 0x04000000006702a0,
0x04000000006742a4, 0x040000000062c25c,
0x0400000000628258, 0x0400000000634264,
0x00002040005f8228, 0x02e0b230005f4224,
};

#endif
